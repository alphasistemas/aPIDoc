{
  "openapi": "3.0.0",
  "info": {
    "title": "Alpha API",
    "description": "A  API da Alpha Sistemas foi desenvolvida baseada na arquitetura REST, seguindo os padrões técnicos de mercado. Tudo isso para que a experiência na hora da integração seja a mais fácil possível. Todas as URLs são amigáveis e orientadas a recursos, utilizando os padrões do protocolo HTTP com autenticação, verbos e códigos de retorno. Isso permite o uso da API por clients HTTP já existentes. Todas as respostas são retornadas no formato JSON. Como pode ser visto abaixo, a API foi cuidadosamente trabalhada para que as regras de negócios contidas sejam facilmente entendidas por desenvolvedores que não tenham conhecimento prévio do sistema. Elas foram meticulosamente estudadas para que os nomes dos campos em um endpoint tenham rigorosamente o mesmo significado em outros recursos. \n\n Para usar esta API, é necessário que o usuário esteja autenticado. Para isso, cria-se uma nova conta a partir da rota /auth/singUp ou utiliza-se um usuário administrador provido pela infra. Conseguinte, é necessário que o usuário se autentique pela rota /auth/signIn, que retornará um token de autenticação. Em cada rota da API o token será solicitado como bearer token. O usuário precisará se autenticar novamente toda vez que vencer o prazo de autenticação predefinido. A API só funcionará se o usuário estiver usando um token.",
    "version": "1.0.0",
    "contact": {
      "name": "Alpha Sistemas",
      "email": "desenvolvimento@alphasystemas.com.br"
    }
  },
  "servers": [
    {
      "url": "{full url}",
      "description": "Test Server",
      "variables": {
        "full url": {
          "default": "https://api-alpha.alphasystemas.com.br"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Autenticação",
      "description": "Reúne endpoints relacionados à autenticação."
    },
    {
      "name": "Catálogo",
      "description": "Reúne endpoints relacionados ao catálogo."
    },
    {
      "name": "Configurações",
      "description": "Reúne endpoints relacionados à configuração do sistema."
    },
    {
      "name": "Email",
      "description": "Reúne endpoints relacionados à email."
    },
    {
      "name": "Inscrição",
      "description": "Reúne endpoints relacionados à inscrição."
    },
    {
      "name": "Produto",
      "description": "Reúne endpoints relacionados ao produtos."
    },
    {
      "name": "Usuário",
      "description": "Reúne endpoints relacionados ao usuário."
    },
    {
      "name": "Venda",
      "description": "Reúne endpoints relacionados à venda."
    },
    {
      "name": "Promoção",
      "description": "Reúne endpoints relacionados à promoção."
    }
  ],
  "paths": {
    "/auth/signIn": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "Login do usuário ou serviço.",
        "operationId": "postSignIn",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodySignIn"
              },
              "examples": {
                "usuário": {
                  "summary": "Exemplo de Login de Usuário"
                },
                "serviço": {
                  "summary": "Exemplo de Login de Serviço",
                  "value": {
                    "type": "SERVICE",
                    "identification": "userteste3@gmail.com",
                    "key": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseSignIn"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Autenticação"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Refresh de token.",
        "operationId": "putSignIn",
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseSignIn"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signUp": {
      "post": {
        "tags": ["Autenticação"],
        "security": [
          {},
          {
            "bearerAuth": []
          }
        ],
        "summary": "Cadastrar novo usuário ou serviço.",
        "operationId": "postSignUp",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodySignUp"
              },
              "examples": {
                "usuário": {
                  "summary": "Exemplo de Cadastro de Usuário"
                },
                "serviço": {
                  "summary": "Exemplo de Cadastro de Serviço",
                  "value": {
                    "givenName": "LOJA",
                    "familyName": "API",
                    "identifications": [
                      {
                        "type": "SERVICE",
                        "identification": "LOJAAPI",
                        "key": "vsadgvf7asd9fg8as8d7f6"
                      }
                    ],
                    "permissions": {
                      "auth": {
                        "all": ["all"]
                      },
                      "VUTT": {
                        "all": ["all"]
                      }
                    },
                    "instances": {
                      "all": ["all"]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseSignUp"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/catalog/config": {
      "delete": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar uma configuração de catálogo.",
        "operationId": "deleteConfig",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da configuração.",
            "schema": {
              "type": "string",
              "example": "61cc904856f304037ce2b600"
            }
          },
          {
            "name": "store",
            "in": "query",
            "description": "Número da loja.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 11
            }
          },
          {
            "name": "minimunQuantity",
            "in": "query",
            "description": "Quantidade mínima.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todos as configurações de catálogo.",
        "operationId": "getConfig",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da configuração.",
            "schema": {
              "type": "string",
              "format": "61cc906a56f304037ce2b61a"
            }
          },
          {
            "name": "store",
            "in": "query",
            "description": "Número da loja.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "minimumQuantity",
            "in": "query",
            "description": "Quantidade mínima.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bodyCatalogConfigArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Alterar uma Configuração.",
        "operationId": "putConfig",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyCatalogConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bodyCatalogConfig"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Configurar o Catálogo.",
        "operationId": "postCatalogConfig",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyCatalogConfig"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bodyCatalogConfig"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/catalog/group": {
      "delete": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar um grupo de catálogo.",
        "operationId": "deleteGroupCatalog",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do Grupo.",
            "schema": {
              "type": "string",
              "example": "61cc904856f304037ce2b600"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome do Grupo.",
            "schema": {
              "type": "string",
              "example": "Camisas"
            }
          },
          {
            "name": "images",
            "in": "query",
            "description": "URL da Imagem.",
            "schema": {
              "type": "string",
              "example": "https://img.elo7.com.br/product/main/3A98FBA/roupa-free-fire-angelical-free-fire-angelical.jpg"
            }
          },
          {
            "name": "priceTable",
            "in": "query",
            "description": "Tabela de Preços.",
            "schema": {
              "type": "number",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "expirationAt",
            "in": "query",
            "description": "Tabela de Preços.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T03:00:00.000Z"
            }
          },
          {
            "name": "createdAt",
            "in": "query",
            "description": "Tabela de Preços.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-12-29T13:26:50.257Z"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Tabela de Preços.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-12-29T13:26:50.257Z"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todos os grupos de catálogo.",
        "operationId": "getGroupCatalog",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do Grupo.",
            "schema": {
              "type": "string",
              "example": "61cc904856f304037ce2b600"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome do Grupo.",
            "schema": {
              "type": "string",
              "example": "Camisas"
            }
          },
          {
            "name": "images",
            "in": "query",
            "description": "URL da Imagem.",
            "schema": {
              "type": "string",
              "example": "https://img.elo7.com.br/product/main/3A98FBA/roupa-free-fire-angelical-free-fire-angelical.jpg"
            }
          },
          {
            "name": "priceTable",
            "in": "query",
            "description": "Tabela de Preços.",
            "schema": {
              "type": "number",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "expirationAt",
            "in": "query",
            "description": "Tabela de Preços.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T03:00:00.000Z"
            }
          },
          {
            "name": "createdAt",
            "in": "query",
            "description": "Tabela de Preços.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-12-29T13:26:50.257Z"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Tabela de Preços.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-12-29T13:26:50.257Z"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/groupCatalogArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Alterar uma Configuração de grupo.",
        "operationId": "putGroupCatalog",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/catalogGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalogGroup"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Agrupar o Catálogo.",
        "operationId": "postCatalogGroup",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/catalogGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalogGroup"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/catalog/product": {
      "delete": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar um Produto do catálogo.",
        "operationId": "deleteProductCatalog",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do Produto.",
            "schema": {
              "type": "string",
              "example": "61cc904856f304037ce2b600"
            }
          },
          {
            "name": "catalogs",
            "in": "query",
            "description": "Nome da catálogo.",
            "schema": {
              "type": "string",
              "example": "Calçados"
            }
          },
          {
            "name": "images",
            "in": "query",
            "description": "URL da imagem.",
            "schema": {
              "type": "string",
              "example": "https://img.elo7.com.br/product/main/3A98FBA/roupa-free-fire-angelical-free-fire-angelical.jpg"
            }
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "Desativado.",
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todas as configurações de produto.",
        "operationId": "getProductCatalog",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do produto.",
            "schema": {
              "type": "string",
              "example": "61cc906a56f304037ce2b61a"
            }
          },
          {
            "name": "reference",
            "in": "query",
            "description": "Referência do produto.",
            "schema": {
              "type": "string",
              "example": "0920980"
            }
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "Desativado.",
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "groups",
            "in": "query",
            "description": "Grupo do produto.",
            "schema": {
              "type": "string",
              "example": "61d44f843b1b3fddedc72a63"
            }
          },
          {
            "name": "images",
            "in": "query",
            "description": "URL do produto.",
            "schema": {
              "type": "string",
              "example": "https://img.elo7.com.br/product/main/3A98FBA/roupa-free-fire-angelical-free-fire-angelical.jpg"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalogProductArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Alterar um Produto.",
        "operationId": "putProductCatalog",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/catalogProductArray"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalogProductArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar um Produto.",
        "operationId": "postSubscription",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/catalogProduct"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalogProduct"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/catalog/theme": {
      "delete": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar um tema de catálogo.",
        "operationId": "deleteThemeCatalog",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do tema.",
            "schema": {
              "type": "string",
              "example": "61cc904856f304037ce2b600"
            }
          },
          {
            "name": "logos",
            "in": "query",
            "description": "Logo do tema.",
            "schema": {
              "type": "string",
              "example": "https://img.elo7.com.br/product/main/3A98FBA/roupa-free-fire-angelical-free-fire-angelical.jpg"
            }
          },
          {
            "name": "favicos",
            "in": "query",
            "description": "Favico do tema.",
            "schema": {
              "type": "string",
              "example": "https://img.elo7.com.br/product/main/3A98FBA/roupa-free-fire-angelical-free-fire-angelical.jpg"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todos os temas de catálogo.",
        "operationId": "getThemeCatalog",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do tema.",
            "schema": {
              "type": "string",
              "example": "61cc906a56f304037ce2b61a"
            }
          },
          {
            "name": "logos",
            "in": "query",
            "description": "Logomarca.",
            "schema": {
              "type": "string",
              "example": "https://img.elo7.com.br/product/main/3A98FBA/roupa-free-fire-angelical-free-fire-angelical.jpg"
            }
          },
          {
            "name": "logos",
            "in": "query",
            "description": "Logomarca.",
            "schema": {
              "type": "string",
              "example": "https://img.elo7.com.br/product/main/3A98FBA/roupa-free-fire-angelical-free-fire-angelical.jpg"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/themeArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Alterar uma Configuração de Tema.",
        "operationId": "putConfig",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/theme"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/theme"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Catálogo"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar um Tema.",
        "operationId": "postTheme",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/theme"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/theme"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/settings": {
      "get": {
        "tags": ["Configurações"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todas as configurações do sistema.",
        "operationId": "getSettings",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da configuração.",
            "schema": {
              "type": "string",
              "example": "61cc906a56f304037ce2b61a"
            }
          },
          {
            "name": "maximumDiscount",
            "in": "query",
            "description": "Desconto Máximo.",
            "schema": {
              "type": "number",
              "example": 10.0
            }
          },
          {
            "name": "minimumQuantityWholesale",
            "in": "query",
            "description": "Quantidade Mínima para Atacado.",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "minimumValueWholesale",
            "in": "query",
            "description": "Valor Mínimo para Atacado.",
            "schema": {
              "type": "number",
              "example": 100.0
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settingsArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Configurações"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Alterar as configurações do sistema.",
        "operationId": "putsSettings",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da configuração.",
            "schema": {
              "type": "string",
              "example": "61cc906a56f304037ce2b61a"
            }
          },
          {
            "name": "maximumDiscount",
            "in": "query",
            "description": "Desconto Máximo.",
            "schema": {
              "type": "number",
              "example": 10.0
            }
          },
          {
            "name": "minimumQuantityWholesale",
            "in": "query",
            "description": "Quantidade Mínima para Atacado.",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "minimumValueWholesale",
            "in": "query",
            "description": "Valor Mínimo para Atacado.",
            "schema": {
              "type": "number",
              "example": 100.0
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5
            }
          }
        ],
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/settings"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/settings/store": {
      "get": {
        "tags": ["Configurações"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todas as configurações das lojas.",
        "operationId": "getSettingsStore",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da configuração.",
            "schema": {
              "type": "string",
              "example": "61cc906a56f304037ce2b61a"
            }
          },
          {
            "name": "maximumDiscount",
            "in": "query",
            "description": "Desconto Máximo.",
            "schema": {
              "type": "number",
              "example": 10.0
            }
          },
          {
            "name": "minimumQuantityWholesale",
            "in": "query",
            "description": "Quantidade Mínima para Atacado.",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "minimumValueWholesale",
            "in": "query",
            "description": "Valor Mínimo para Atacado.",
            "schema": {
              "type": "number",
              "example": 100.0
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settingsArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Configurações"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Alterar uma as configurações de uma loja.",
        "operationId": "putSettingsStore",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da configuração.",
            "schema": {
              "type": "string",
              "example": "61cc906a56f304037ce2b61a"
            }
          },
          {
            "name": "maximumDiscount",
            "in": "query",
            "description": "Desconto Máximo.",
            "schema": {
              "type": "number",
              "example": 10.0
            }
          },
          {
            "name": "minimumQuantityWholesale",
            "in": "query",
            "description": "Quantidade Mínima para Atacado.",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "minimumValueWholesale",
            "in": "query",
            "description": "Valor Mínimo para Atacado.",
            "schema": {
              "type": "number",
              "example": 100.0
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 5
            }
          }
        ],
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/settings"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Configurações"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar as configurações de uma loja.",
        "operationId": "postSettingsStore",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/settings"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/onSale": {
      "get": {
        "tags": ["Promoção"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todas as promoções das lojas.",
        "operationId": "getOnSale",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da promoção.",
            "schema": {
              "type": "string",
              "example": "61cc906a56f304037ce2b61a"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da promoção.",
            "schema": {
              "type": "string",
              "example": "Promoção 1"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Referencia do Produto.",
            "schema": {
              "type": "integer",
              "example": 1056345
            }
          },
          {
            "name": "groupInPercentage",
            "in": "query",
            "description": "Grupo de Desconto em Porcentagem.",
            "schema": {
              "type": "number",
              "example": 10.0
            }
          },
          {
            "name": "productInPercentage",
            "in": "header",
            "description": "Produto em Porcentagem.",
            "schema": {
              "type": "number",
              "example": 12.4
            }
          },
          {
            "name": "groupInValue",
            "in": "header",
            "description": "Grupo de Desconto em Valor.",
            "schema": {
              "type": "number",
              "example": 12.4
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Id da loja.",
            "schema": {
              "type": "integer",
              "example": 1056345
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Data de inicio da promoção.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2020-01-05T00:00:00.000Z"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "Data de fim da promoção.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2020-05-05T00:00:00.000Z"
            }
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "Status da promoção.",
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "priceTable",
            "in": "query",
            "description": "Tabela de preço.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/onSaleArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/email/email": {
      "post": {
        "tags": ["Email"],
        "summary": "Enviar e-mail.",
        "operationId": "postEmail",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyEmail"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseEmail"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/category": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todas as categorias.",
        "operationId": "getCategory",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da categoria.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da categoria.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/category/{id}": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Encrontrar uma categoria pelo id.",
        "description": "Retorna uma única categoria.",
        "operationId": "getCategoryId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da categoria.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "name",
            "description": "Nome da categoria.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/category"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/collection": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todas as coleções.",
        "operationId": "getCollection",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da coleção.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da coleção.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/collectionArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/collection/{id}": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Encrontrar uma coleção pelo id.",
        "description": "Retorna uma única coleção.",
        "operationId": "getCollectionId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da categoria.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da coleção.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/collection"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/color": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todas as cores de produto.",
        "operationId": "getProductColor",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Código da cor.",
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da cor.",
            "schema": {
              "type": "string",
              "example": "ESTAMPADO"
            }
          },
          {
            "name": "warehouse",
            "in": "query",
            "description": "Almoxarifado.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/dpa": {
      "delete": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar o registro de entrada ou saída de um produto do DPA.",
        "operationId": "deleteDPA",
        "parameters": [
          {
            "required": true,
            "name": "id",
            "in": "query",
            "description": "Id do produto.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Registrar uma saída de produto do estoque do DPA.",
        "operationId": "postDpa",
        "requestBody": {
          "required": true,
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyDpa"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseDpa"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/grid": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todas as grades de produto.",
        "operationId": "getProductGrid",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Código da grade.",
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da grade.",
            "schema": {
              "type": "string",
              "example": "PLUS SIZE"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productGrid"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/group": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todos os grupos.",
        "operationId": "getGroup",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do grupo.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome do grupo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Nome do grupo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/groupArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/group/{id}": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Encrontrar um grupo pelo id.",
        "description": "Retorna um único grupo.",
        "operationId": "getGroupId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da categoria.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome do grupo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/inventory": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter o estoque de todos os produtos.",
        "operationId": "getInventory",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "Id do inventário.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "description": "SKU.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Quantidade em estoque.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Número da Loja (Loja 1 = Matriz)",
            "schema": {
              "$ref": "#/components/schemas/storeId"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventoryArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/inventory/out": {
      "put": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Atualizar o estoque do produto.",
        "operationId": "getInventoryOut",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Número da Loja (Loja 1 = Matriz)",
            "schema": {
              "$ref": "#/components/schemas/storeId"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Corpo da requisição.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/inventoryOut"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventoryOut"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/inventory/out/grid": {
      "put": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Atualizar o estoque do produto.",
        "operationId": "getInventoryOutGrid",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyInventoryOutGrid"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bodyInventoryOutGrid"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/line": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todas as linhas.",
        "operationId": "getLine",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da linha.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da linha.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lineArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/line/{id}": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Encrontrar uma linha pelo id.",
        "description": "Retorna uma única linha.",
        "operationId": "getLineId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da categoria.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da linha.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/line"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/product": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todos os produtos.",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Referência do produto.",
            "schema": {
              "type": "string",
              "example": "0100058"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome do produto.",
            "schema": {
              "type": "string",
              "example": "KALESON DE RENDA"
            }
          },
          {
            "name": "weight",
            "in": "query",
            "description": "Peso do produto.",
            "schema": {
              "type": "number",
              "example": 10
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Preço do produto.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "costPrice",
            "in": "query",
            "description": "Preço de custo do produto.",
            "schema": {
              "type": "number",
              "example": 109.9
            }
          },
          {
            "name": "buyPrice",
            "in": "query",
            "description": "Preço de compra do produto.",
            "schema": {
              "type": "number",
              "example": 109.9
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Unidade.",
            "schema": {
              "type": "string",
              "example": "PC"
            }
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "Produto Inativo.",
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "noStock",
            "in": "query",
            "description": "Retorna os produtos que estão com o estoque zerado.",
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "withStock",
            "in": "query",
            "description": "Retorna os produtos que têm estoque.",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "Gênero do produto.",
            "schema": {
              "type": "integer",
              "example": 2
            }
          },
          {
            "name": "createdAt",
            "in": "query",
            "description": "Data de cadatro do produto.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T03:00:00.000Z"
            }
          },
          {
            "name": "isWebStore",
            "in": "query",
            "description": "Indica se o produto foi enviado ou não, para a loja virtual.",
            "schema": {
              "type": "boolean",
              "example": "false"
            }
          },
          {
            "name": "grid",
            "in": "query",
            "description": "Grade do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "barcode",
            "in": "query",
            "description": "Código de barras do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gridTable",
            "in": "query",
            "description": "Grid do produto em tabela.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "localization",
            "in": "query",
            "description": "Localização do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloth1",
            "in": "query",
            "description": "Tecido 1 do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloth2",
            "in": "query",
            "description": "Tecido 2 do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastBalanceAt",
            "in": "query",
            "description": "Data do último balanço.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T03:00:00.000Z"
            }
          },
          {
            "name": "lastPurchaseAt",
            "in": "query",
            "description": "Data da última compra.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2021-01-01T03:00:00.000Z"
            }
          },
          {
            "name": "in",
            "in": "query",
            "description": "Entradas.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "out",
            "in": "query",
            "description": "Saídas.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplier",
            "in": "query",
            "description": "Fornecedor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "initialId",
            "in": "query",
            "description": "Código original do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastSupplierPurchase",
            "in": "query",
            "description": "Última compra do fornecedor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employeePrice",
            "in": "query",
            "description": "Preço para funcionário.",
            "schema": {
              "type": "number",
              "example": 19.9
            }
          },
          {
            "name": "NCM",
            "in": "query",
            "description": "Código NCM.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maximumStock",
            "in": "query",
            "description": "Estoque máximo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minimumStock",
            "in": "query",
            "description": "Estoque mínimo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ICP",
            "in": "query",
            "description": "Código ICP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mixId",
            "in": "query",
            "description": "Mix.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CEST",
            "in": "query",
            "description": "Código CEST.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webUpdate",
            "in": "query",
            "description": "Atualiza web.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Id da categoria do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryName",
            "in": "query",
            "description": "Nome da categoria do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Id do grupo do produto.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "Descrição do grupo do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "query",
            "description": "Id da coleção do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionName",
            "in": "query",
            "description": "Última compra do fornecedor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineId",
            "in": "query",
            "description": "Id da linha do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineName",
            "in": "query",
            "description": "Última compra do fornecedor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "colorId",
            "in": "query",
            "description": "Id da cor do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "colorName",
            "in": "query",
            "description": "Última compra do fornecedor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sizeId",
            "in": "query",
            "description": "Id do tamanho do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sizeName",
            "in": "query",
            "description": "Última compra do fornecedor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Última compra do fornecedor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Número da Loja (Loja 1 = Matriz)",
            "schema": {
              "$ref": "#/components/schemas/storeId"
            }
          },
          {
            "name": "elementNumber",
            "in": "query",
            "description": "Número de elementos.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Nome da categoria do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Nome do grupo do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection",
            "in": "query",
            "description": "Nome da coleção do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "line",
            "in": "query",
            "description": "Nome da linha do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "description": "SKU do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skuQuantity",
            "in": "query",
            "description": "Estoque de SKU do produto.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "color",
            "in": "query",
            "description": "Nome da cor do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Tamanho do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "description": "A paginação começa a partir do 0.",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/product/product/{id}": {
      "get": {
        "tags": ["Produto"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Encontrar um produto pelo id.",
        "description": "Retorna um único produto.",
        "operationId": "getProductId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da categoria.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "details",
            "description": "Descrição detalhada do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weight",
            "in": "query",
            "description": "Peso do produto.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Preço do produto.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Unidade de medida do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "Mostra se o produtos está inativo ou não.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "Gênero do produto.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "quantity",
            "description": "Quantidade em estoque.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAt",
            "in": "query",
            "description": "Data de cadatro do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isWebStore",
            "in": "query",
            "description": "Indica se o produto foi enviado ou não, para a loja virtual.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Id da categoria do produto.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Nome da categoria do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Nome do grupo do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "query",
            "description": "Id da coleção do produto.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "collection",
            "in": "query",
            "description": "Nome da coleção do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineId",
            "in": "query",
            "description": "Id da linha do produto.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "line",
            "in": "query",
            "description": "Nome da linha do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "description": "SKU do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skuQuantity",
            "in": "query",
            "description": "Estoque de SKU do produto.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "colorId",
            "in": "query",
            "description": "Id da cor do produto.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "color",
            "in": "query",
            "description": "Nome da cor do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sizeId",
            "in": "query",
            "description": "Id do tamanho do produto.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Tamanho do produto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Número da Loja (Loja 1 = Matriz)",
            "schema": {
              "$ref": "#/components/schemas/storeId"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/sale/bill": {
      "delete": {
        "tags": ["Venda"],
        "summary": "Deletar uma comanda.",
        "operationId": "deleteBill",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "description": "Id do cliente.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter uma comanda.",
        "operationId": "getBill",
        "parameters": [
          {
            "name": "consumerId",
            "in": "query",
            "description": "Id do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consumer",
            "in": "query",
            "description": "Nome do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sellerId",
            "in": "query",
            "description": "Id do vendedor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "grossValue",
            "in": "query",
            "description": "Valor bruto.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "discountValue",
            "in": "query",
            "description": "Valor de desconto.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "description": "Forma de pagamento.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMethodId",
            "in": "query",
            "description": "Código da forma de pagamento.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deliveryFee",
            "in": "query",
            "description": "Taxa de entrega.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "Venda realizada pelo comercial ou retaguarda.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ecommerceClientId",
            "in": "query",
            "description": "Código do ecommerce do cliente.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ecommerceOrderId",
            "in": "query",
            "description": "Código do pedido do ecommerce.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Id do produto.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Quantidade de itens da comanda.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "billId",
            "in": "query",
            "description": "Id dacomanda.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Número da Loja (Loja 1 = Matriz)",
            "schema": {
              "$ref": "#/components/schemas/storeId"
            }
          },
          {
            "name": "unitValue",
            "in": "query",
            "description": "Valor da unidade item.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "totalValue",
            "in": "query",
            "description": "Valor do item vezes a quantidade de itens.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "federalTaxes",
            "in": "query",
            "description": "Valot total de tributos federais do item.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "estadualTaxes",
            "in": "query",
            "description": "Valor total de tributos estaduais do item.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "colorId",
            "in": "query",
            "description": "Cor do item.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size01",
            "in": "query",
            "description": "Tamanho 01 referente ao item.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size02",
            "in": "query",
            "description": "Tamanho 02 referente ao item.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size03",
            "in": "query",
            "description": "Tamanho 03 referente ao item.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size04",
            "in": "query",
            "description": "Tamanho 04 referente ao item.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size05",
            "in": "query",
            "description": "Tamanho 05 referente ao item.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size06",
            "in": "query",
            "description": "Tamanho 06 referente ao item.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size07",
            "in": "query",
            "description": "Tamanho 07 referente ao item.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size08",
            "in": "query",
            "description": "Tamanho 08 referente ao item.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size09",
            "in": "query",
            "description": "Tamanho 09 referente ao item.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size10",
            "in": "query",
            "description": "Tamanho 10 referente ao item.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bill"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar uma comanda.",
        "operationId": "postBill",
        "requestBody": {
          "description": "Corpo da requisição.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/billPost"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/billPost"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/sale/estimate": {
      "delete": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar um orçamento.",
        "operationId": "deleteSaleEstimate",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da estimativa.",
            "schema": {
              "type": "string",
              "example": "61cc904856f304037ce2b600"
            }
          },
          {
            "name": "catalogs",
            "in": "query",
            "description": "Nome da catálogo.",
            "schema": {
              "type": "string",
              "example": "Calçados"
            }
          },
          {
            "name": "images",
            "in": "query",
            "description": "URL da imagem.",
            "schema": {
              "type": "string",
              "example": "https://img.elo7.com.br/product/main/3A98FBA/roupa-free-fire-angelical-free-fire-angelical.jpg"
            }
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "Desativado.",
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todos os Orçamentos.",
        "operationId": "getSaleEstimate",
        "parameters": [
          {
            "name": "Data",
            "in": "query",
            "description": "Data da estimativa.",
            "schema": {
              "type": "string",
              "example": "06/01/2022"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Id da estimativa.",
            "schema": {
              "type": "string",
              "example": "61cc906a56f304037ce2b61a"
            }
          },
          {
            "name": "consumerId",
            "in": "query",
            "description": "Id do cliente.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 2
            }
          },
          {
            "name": "consumer",
            "in": "query",
            "description": "Nome do cliente.",
            "schema": {
              "type": "string",
              "example": "CLIENTE 5"
            }
          },
          {
            "name": "sellerId",
            "in": "query",
            "description": "Id do vendedor.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 102
            }
          },
          {
            "name": "grossValue",
            "in": "query",
            "description": "Valor bruto.",
            "schema": {
              "type": "string",
              "example": "264.00"
            }
          },
          {
            "name": "discountValue",
            "in": "query",
            "description": "Valor do desconto.",
            "schema": {
              "type": "string",
              "example": "0.00"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "description": "Método de pagamento.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "paymentConditions",
            "in": "query",
            "description": "Condição de pagamento.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Número da Loja (Loja 1 = Matriz)",
            "schema": {
              "$ref": "#/components/schemas/storeId"
            }
          },
          {
            "name": "deliveryFee",
            "in": "query",
            "description": "Taxa de entrega.",
            "schema": {
              "type": "string",
              "example": "20.00"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalogProductArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Alterar um Orçamento.",
        "operationId": "putProductCatalog",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/catalogProductArray"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalogProductArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar um Orçamento.",
        "operationId": "postSubscription",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/catalogProduct"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalogProduct"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/sale/invoice": {
      "delete": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar um registro no financeiro.",
        "operationId": "deleteInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do registro.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar uma fatura.",
        "operationId": "postInvoice",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Número da Loja (Loja 1 = Matriz)",
            "schema": {
              "$ref": "#/components/schemas/storeId"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyInvoice"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseInvoice"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/sale/payment/condition": {
      "delete": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar uma condição de pagamento.",
        "operationId": "deleteSalePaymentCondition",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da condição de pagamento.",
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todas as Condições de Pagamento.",
        "operationId": "getSalePaymentCondition",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da condição de pagamento.",
            "schema": {
              "type": "string",
              "example": "30"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da condição de pagamento.",
            "schema": {
              "type": "string",
              "example": "30/60/90 Dias"
            }
          },
          {
            "name": "installments",
            "in": "query",
            "description": "Qauntidade de Parcelas.",
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "firstInstallmentDays",
            "in": "query",
            "description": "Dia do pagamento da primeira parcela.",
            "schema": {
              "type": "integer",
              "example": 31
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "Dias.",
            "schema": {
              "type": "integer",
              "example": 30
            }
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "Inativo.",
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "discount",
            "in": "query",
            "description": "Valor do desconto.",
            "schema": {
              "type": "number",
              "example": 0.99
            }
          },
          {
            "name": "keepFixedDay",
            "in": "query",
            "description": "Manter dia fixo.",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "catalog",
            "in": "query",
            "description": "Catálogo.",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "example": 2
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responsePaymentConditionArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar uma condição de Pagamento.",
        "operationId": "postSalePaymentCondition",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/paymentCondition"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paymentCondition"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/sale/payment/method": {
      "delete": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar um método de pagamento.",
        "operationId": "deleteSalePaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do método de pagamento.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todos métodos de Pagamento.",
        "operationId": "getSalePaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do método de pagamento.",
            "schema": {
              "type": "string",
              "example": "30"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Descrição do método de pagamento.",
            "schema": {
              "type": "string",
              "example": "CARTÃO"
            }
          },
          {
            "name": "mnemonic",
            "in": "query",
            "description": "Sigla.",
            "schema": {
              "type": "string",
              "example": "CA"
            }
          },
          {
            "name": "finisherId",
            "in": "query",
            "description": "Codigo da Finalizadora (meio de pagamento).",
            "schema": {
              "type": "integer",
              "example": 99
            }
          },
          {
            "name": "issue",
            "in": "query",
            "description": "Baixa em Titulo.",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "catalog",
            "in": "query",
            "description": "Catálogo.",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Descricao da Leitura.",
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "example": 2
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paymentMethodArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar uma condição de Pagamento.",
        "operationId": "postSalePaymentMethod",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/paymentMethod"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paymentMethod"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/sale/sale": {
      "post": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar uma venda.",
        "operationId": "postSale",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Número da Loja (Loja 1 = Matriz)",
            "schema": {
              "$ref": "#/components/schemas/storeId"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodySale"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseSale"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Venda"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deleta uma venda.",
        "operationId": "deleteSale",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Número da Loja (Loja 1 = Matriz)",
            "schema": {
              "$ref": "#/components/schemas/storeId"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteSale"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteSale"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/subscription/publication": {
      "post": {
        "tags": ["Inscrição"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar uma Publicação.",
        "operationId": "postPublication",
        "requestBody": {
          "description": "Corpo da requisição.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/publication"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publication"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/subscription/subscription": {
      "post": {
        "tags": ["Inscrição"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar uma Inscrição.",
        "operationId": "postSubscription",
        "requestBody": {
          "description": "No objeto ***callback***, na ***url*** será necessário que o usuário defina uma url, onde receberá as notificações de cada evento que chegar API. No ***method*** ele pode definir o método que deseja receber essas notificações (se esse campo for removido, a url receberá qualquer evento, setado no ***method*** do route, que foi recebido na API. No ***config***, um objeto é repassado para o axios para que possa fazer a conexão com a rota em questão. \n\nNo objeto ***route***: a chave ***endpoint*** define um endpoint que o usuário deseja escutar; a chave ***method***, será um array de métodos que o usuário deseja receber retorno. Se você usar apenas o ***post*** no ***method***, você criará uma inscrição apenas para esse método e não receberá resposta dos outros métodos ***PUT, GET, DELETE***.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscription"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscription"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/user/city": {
      "get": {
        "tags": ["Usuário"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todos as cidades.",
        "operationId": "getCity",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id da cidade.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da cidade.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Estado da cidade.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IBGEId",
            "in": "query",
            "description": "Código da cidade disponibilizado pelo IBGE.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cityArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Usuário"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Cadatrar uma cidade.",
        "operationId": "postCity",
        "requestBody": {
          "required": true,
          "description": "Corpo do cadastro de cidade.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/city"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/city"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/user/city/{id}": {
      "get": {
        "tags": ["Usuário"],
        "summary": "Obter a cidade pelo id.",
        "operationId": "getCityId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da categoria.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Número do Id da cidade.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome da cidade.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Estado da cidade.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IBGEId",
            "in": "query",
            "description": "Código da cidade disponibilizado pelo IBGE..",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/city"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/user/client": {
      "get": {
        "tags": ["Usuário"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todos os Clientes.",
        "operationId": "getClient",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cityId",
            "in": "query",
            "description": "Id da cidade.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryId",
            "in": "query",
            "description": "Id do país.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome Fantasia do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "corporateName",
            "in": "query",
            "description": "Razão Social do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CNPJCPF",
            "in": "query",
            "description": "CNPJ ou CPF do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "Endereço do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "description": "CEP do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "district",
            "in": "query",
            "description": "Bairro do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Cidade do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UF",
            "in": "query",
            "description": "UF (Unidade Federativa) do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "País do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registerDate",
            "in": "query",
            "description": "Data do cadastro do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Telefone do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellphone",
            "in": "query",
            "description": "Celular do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "whatsapp",
            "in": "query",
            "description": "WhatsApp do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blocked",
            "in": "query",
            "description": "Verifica se o cliente está bloqueado ou não.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "Verifica se o cliente está inativo ou não.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "clientType",
            "in": "query",
            "description": "Tipo de cliente.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clientArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Usuário"],
        "summary": "Cadatrar um cliente.",
        "operationId": "postClient",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Corpo do cadastro de cliente.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyClient"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseClient"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/user/client/{id}": {
      "get": {
        "tags": ["Usuário"],
        "summary": "Obter o cliente pelo id.",
        "operationId": "getClientId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da categoria.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome Fantasia do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "corporateName",
            "in": "query",
            "description": "Razão Social do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CNPJCPF",
            "in": "query",
            "description": "CNPJ ou CPF do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "Endereço do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "description": "CEP do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "district",
            "in": "query",
            "description": "Bairro do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Cidade do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UF",
            "in": "query",
            "description": "UF (Unidade Federativa) do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "País do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registerDate",
            "in": "query",
            "description": "Data do cadastro do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Telefone do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellphone",
            "in": "query",
            "description": "Celular do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "whatsapp",
            "in": "query",
            "description": "WhatsApp do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blocked",
            "in": "query",
            "description": "Verifica se o cliente está bloqueado ou não.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "Verifica se o cliente está inativo ou não.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "clientType",
            "in": "query",
            "description": "Tipo de cliente.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/client"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/user/employee": {
      "get": {
        "tags": ["Usuário"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter todos os funcionários.",
        "operationId": "getEmployee",
        "parameters": [
          {
            "name": "CPF",
            "in": "query",
            "description": "CPF do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RG",
            "in": "query",
            "description": "RG do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UF",
            "in": "query",
            "description": "UF (Unidade Federativa) do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CTPS",
            "in": "query",
            "description": "Id CTPS.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PIS",
            "in": "query",
            "description": "Número PIS.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Obs",
            "in": "query",
            "description": "Observação.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Id do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "description": "Código postal.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Cidade do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cityId",
            "in": "query",
            "description": "Id do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellphone",
            "in": "query",
            "description": "Celular funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Código postal.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "Endereço do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CEP",
            "in": "query",
            "description": "CEP do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Telefone funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registerDate",
            "in": "query",
            "description": "Data do cadastro do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Função do funcionário.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "situation",
            "in": "query",
            "description": "Situação do funcionário.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Verifica se o funcionário está ativo ou não.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/employeeArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Usuário"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Cadatrar um funcionário.",
        "operationId": "postEmployee",
        "requestBody": {
          "description": "Corpo do cadastro de funcionários.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyEmployee"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseEmployee"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    },
    "/user/employee/{id}": {
      "get": {
        "tags": ["Usuário"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Obter o funcionário pelo id.",
        "operationId": "getEmployeeId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da categoria.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Nome do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CPF",
            "in": "query",
            "description": "CPF do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RG",
            "in": "query",
            "description": "RG do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "Endereço do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CEP",
            "in": "query",
            "description": "CEP do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Cidade do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UF",
            "in": "query",
            "description": "UF (Unidade Federativa) do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Telefone funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cellphone",
            "description": "Celular funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registerDate",
            "in": "query",
            "description": "Data do cadastro do funcionário.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Função do funcionário.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "situation",
            "in": "query",
            "description": "Situação do funcionário.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Verifica se o funcionário está ativo ou não.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "header",
            "description": "Página da resposta.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "header",
            "description": "Número de elementos por página.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ação concluída com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/employeeArray"
                }
              }
            }
          },
          "204": {
            "description": "Sem conteúdo."
          },
          "400": {
            "description": "Requisição invalida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "503": {
            "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error503"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "all": {
        "type": "string",
        "example": "all"
      },
      "allArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/all"
        }
      },
      "mongoId": {
        "type": "string",
        "example": "507f1f77bcf86cd799439011"
      },
      "mssqlId": {
        "type": "integer",
        "format": "int32",
        "example": 123456
      },
      "storeId": {
        "description": "Número da Loja (Loja 1 = Matriz)",
        "$ref": "#/components/schemas/mssqlId"
      },
      "email": {
        "type": "string",
        "example": "email@dominioexemplo.com.br"
      },
      "envelope": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "example": "alphaweb@alphasystemas.com.br"
          },
          "to": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "cliente@email.com.br"
            }
          }
        }
      },
      "size": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "P"
          },
          "quantity": {
            "type": "integer",
            "format": "int16",
            "example": 6
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "sku": {
            "type": "string",
            "example": "0000001-0009-1"
          }
        }
      },
      "sizes": {
        "type": "string",
        "example": "52, 34, 36, 38, 40, 42, 44, 46, 48, 50"
      },
      "bill": {
        "type": "object",
        "required": ["consumer", "paymentId", "products", "unitValue"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "01/12/2020"
          },
          "consumerId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "consumer": {
            "type": "string",
            "example": "GLAYLSON SILVEIRE"
          },
          "sellerId": {
            "type": "integer",
            "format": "int32",
            "example": 102
          },
          "grossValue": {
            "type": "string",
            "example": "800.00"
          },
          "discountValue": {
            "type": "string",
            "example": "0.00"
          },
          "paymentConditionsId": {
            "type": "number",
            "example": 12
          },
          "paymentConditions": {
            "type": "string",
            "example": "30/60"
          },
          "paymentMethodId": {
            "type": "number",
            "example": 10
          },
          "paymentMethod": {
            "type": "string",
            "example": "Car"
          },
          "priceTable": {
            "type": "string",
            "example": "1"
          },
          "deliveryFee": {
            "type": "string",
            "example": 0.0
          },
          "ecommerceOrderId": {
            "type": "string",
            "example": "2000834322"
          },
          "inCash": {
            "type": "number",
            "format": "double",
            "example": 0
          },
          "installments": {
            "type": "number",
            "format": "double",
            "example": 800
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "paymentId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          }
        }
      },
      "billPost": {
        "type": "object",
        "properties": {
          "consumerId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "consumer": {
            "type": "string",
            "example": "Cliente 7"
          },
          "sellerId": {
            "type": "integer",
            "format": "int32",
            "example": 102
          },
          "discountValue": {
            "type": "number",
            "format": "double",
            "example": 0.0
          },
          "paymentConditionsId": {
            "type": "number",
            "example": 12
          },
          "paymentConditions": {
            "type": "string",
            "example": "30/60"
          },
          "paymentMethodId": {
            "type": "number",
            "example": 10
          },
          "paymentMethod": {
            "type": "string",
            "example": "Car"
          },
          "priceTable": {
            "type": "string",
            "example": "1"
          },
          "deliveryFee": {
            "type": "number",
            "format": "double",
            "example": 20.0
          },
          "ecommerceOrderId": {
            "type": "string",
            "example": "2000834322"
          },
          "inCash": {
            "type": "number",
            "format": "double",
            "example": 0
          },
          "installments": {
            "type": "number",
            "format": "double",
            "example": 800
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productSale"
            }
          },
          "billId": {
            "type": "string",
            "example": "200135"
          }
        }
      },
      "billArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/bill"
        }
      },
      "productSaleBillResponse": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "439104"
          },
          "unitValue": {
            "type": "number",
            "format": "double",
            "example": 36.0
          },
          "grids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/grid"
            }
          },
          "quantity": {
            "type": "integer",
            "format": "int16",
            "example": 4
          },
          "totalValue": {
            "type": "number",
            "format": "double",
            "example": 144
          }
        }
      },
      "bodyCatalogConfig": {
        "type": "object",
        "required": ["id", "store", "minimunQuantity"],
        "properties": {
          "id": {
            "type": "string",
            "example": "61cc543656f304037ce2b47e"
          },
          "store": {
            "type": "integer",
            "format": "int32",
            "example": 102
          },
          "minimunQuantity": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "bodyCatalogConfigArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/bodyCatalogConfig"
        }
      },
      "catalogProduct": {
        "type": "object",
        "required": ["id", "priceTable", "minimunQuantity"],
        "properties": {
          "id": {
            "type": "string",
            "example": "61cc902656f304037ce2b5e0"
          },
          "disabled": {
            "type": "boolean",
            "example": false
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/mongoId"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/imagesGroupArray"
            }
          }
        }
      },
      "catalogProductArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/catalogProduct"
        }
      },
      "bodyClient": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "CONSUMIDORES DIVERSOS 2"
          },
          "corporateName": {
            "type": "string",
            "example": "CONSUMIDORES DIVERSOS 2"
          },
          "CNPJCPF": {
            "type": "string",
            "example": "111111111112"
          },
          "address": {
            "type": "string",
            "example": "AVENIDA SANTOS DUMONT"
          },
          "postalCode": {
            "type": "string",
            "example": "61932660"
          },
          "district": {
            "type": "string",
            "example": "ALDEOTA"
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "example": 674
          },
          "UF": {
            "type": "string",
            "example": "CE"
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "example": 674
          },
          "phone": {
            "type": "string",
            "example": "30302020"
          },
          "cellphone": {
            "type": "string",
            "example": "085999808080"
          },
          "whatsapp": {
            "type": "string",
            "example": "085999808080"
          },
          "email": {
            "type": "string",
            "example": "cliente@email.com.br"
          },
          "blocked": {
            "type": "boolean",
            "example": false
          },
          "inactive": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "bodyDpa": {
        "type": "object",
        "required": ["productId", "billId", "quantity", "unitValue"],
        "properties": {
          "productId": {
            "type": "string",
            "example": "2020030"
          },
          "billId": {
            "type": "string",
            "example": "200003"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "unitValue": {
            "type": "number",
            "format": "double",
            "example": 20.1
          }
        }
      },
      "responseDpa": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "2020030"
          },
          "billId": {
            "type": "string",
            "example": "200003"
          },
          "quantity": {
            "type": "integer",
            "format": "int16",
            "example": 3
          },
          "unitValue": {
            "type": "number",
            "format": "double",
            "example": 29.98
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-15 14:19:28"
          },
          "type": {
            "type": "string",
            "example": "S"
          },
          "history": {
            "type": "string",
            "example": "VENDA REALIZADA PELO SITE"
          }
        }
      },
      "bodyEmail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Fulano de Tal"
          },
          "email": {
            "type": "string",
            "example": "cliente@email.com.br"
          },
          "subject": {
            "type": "string",
            "example": "Assunto do Email"
          },
          "text": {
            "type": "string",
            "example": "Corpo do Email"
          }
        }
      },
      "responseEmail": {
        "type": "object",
        "properties": {
          "accepted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/email"
            }
          },
          "rejected": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/email"
            }
          },
          "envelopeTime": {
            "type": "integer",
            "format": "int32",
            "example": 3154
          },
          "messageTime": {
            "type": "integer",
            "format": "int32",
            "example": 968
          },
          "messageSize": {
            "type": "integer",
            "format": "int32",
            "example": 340
          },
          "response": {
            "type": "string",
            "example": "250 2.0.0 Ok queued as D6BAA41A4F9C"
          },
          "envolope": {
            "$ref": "#/components/schemas/envelope"
          },
          "messageId": {
            "type": "string",
            "example": "<0220f233-ce4b-6f53-93ed-ed7825ef4ac7@alphasystemas.com.br>"
          }
        }
      },
      "bodyEmployee": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "FUNCIONÁRIOS DIVERSOS 2"
          },
          "CPF": {
            "type": "string",
            "example": "111111111111"
          },
          "address": {
            "type": "string",
            "example": "AVENIDA SANTOS DUMONT"
          },
          "postalCode": {
            "type": "string",
            "example": "60000000"
          },
          "district": {
            "type": "string",
            "example": "ALDEOTA"
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "example": 674
          },
          "UF": {
            "type": "string",
            "example": "CE"
          },
          "phone": {
            "type": "string",
            "example": "30302020"
          },
          "cellphone": {
            "type": "string",
            "example": "085999808080"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "commissionInCash": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commissionInInstallments": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission1": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission2": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission3": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission4": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission5": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission6": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission7": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission8": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission9": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission09": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission10": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission11": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission12": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission13": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission14": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commission15": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commissionCashier": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commissionManager": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commissionSupervisor": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "commissionGeneral": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "limit": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "roleId": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "maritalStatusId": {
            "type": "number",
            "format": "double",
            "example": 10.5
          },
          "dependentQuantity": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "sectorId": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "salary": {
            "type": "number",
            "format": "double",
            "example": 1200.0
          },
          "salaryCTPS": {
            "type": "number",
            "format": "double",
            "example": 1200.0
          },
          "PaymentType": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "example": 30
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "example": 8
          },
          "syndicate": {
            "type": "integer",
            "format": "int16",
            "example": 2
          },
          "transportationVoucher": {
            "type": "boolean",
            "example": false
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "hasControlledEfficiency": {
            "type": "boolean",
            "example": false
          },
          "productionGroupId": {
            "type": "integer",
            "format": "int16",
            "example": 0
          },
          "biweeklyAdvanceAmount": {
            "type": "number",
            "format": "double",
            "example": 500.0
          },
          "isVacationEmployee": {
            "type": "boolean",
            "example": false
          },
          "goldQuotaNumberOfParts": {
            "type": "integer",
            "format": "int16",
            "example": 250
          },
          "goldQuotaCommission": {
            "type": "number",
            "format": "float",
            "example": 50.1
          },
          "goldQuotaAmount": {
            "type": "number",
            "format": "double",
            "example": 570.2
          },
          "silverQuotaNumberOfParts": {
            "type": "integer",
            "format": "int16",
            "example": 250
          },
          "silverQuotaCommission": {
            "type": "number",
            "format": "float",
            "example": 50.1
          },
          "silverQuotaAmount": {
            "type": "number",
            "format": "double",
            "example": 570.2
          },
          "bronzeQuotaNumberOfParts": {
            "type": "integer",
            "format": "int16",
            "example": 250
          },
          "bronzeQuotaCommission": {
            "type": "number",
            "format": "float",
            "example": 50.1
          },
          "bronzeQuotaAmount": {
            "type": "number",
            "format": "double",
            "example": 570.2
          },
          "voucherLimit": {
            "type": "number",
            "format": "double",
            "example": 299.98
          },
          "situation": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "hasTriennium": {
            "type": "boolean",
            "example": false
          },
          "hasQuennium": {
            "type": "boolean",
            "example": false
          },
          "award": {
            "type": "number",
            "format": "double",
            "example": 500.0
          },
          "productivity": {
            "type": "number",
            "format": "double",
            "example": 500.0
          },
          "punctuality": {
            "type": "number",
            "format": "double",
            "example": 500.0
          },
          "bank": {
            "type": "integer",
            "format": "int16",
            "example": 207
          },
          "agency": {
            "type": "string",
            "example": "0001"
          },
          "account": {
            "type": "string",
            "example": "1111111"
          },
          "operation": {
            "type": "string",
            "example": "0000"
          },
          "launchProduction": {
            "type": "boolean",
            "example": false
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "SuperSenhaSeguraDaAlpha"
          },
          "playerIdPdvMobile": {
            "type": "string",
            "example": "StringDoPlayerIdPdvMobile"
          }
        }
      },
      "employee": {
        "type": "object",
        "properties": {
          "CPF": {
            "type": "string",
            "example": "11111111111"
          },
          "RG": {
            "type": "string",
            "example": "111111111111"
          },
          "UF": {
            "type": "string",
            "example": "CE"
          },
          "CTPS": {
            "type": "integer",
            "format": "int32"
          },
          "PIS": {
            "type": "integer",
            "format": "int32"
          },
          "Obs": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 110
          },
          "name": {
            "type": "string",
            "example": "FUNCIONÁRIOS DIVERSOS 2"
          },
          "postalCode": {
            "type": "integer",
            "format": "int32",
            "example": 110
          },
          "city": {
            "type": "string",
            "example": "FORTALEZA"
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "example": 11043
          },
          "cellphone": {
            "type": "string",
            "example": "085999808080"
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "example": 300
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "maritalStatusId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "sectorId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "salary": {
            "type": "number",
            "format": "double",
            "example": 1299.9
          },
          "salaryCTPS": {
            "type": "number",
            "format": "double",
            "example": 1299.9
          },
          "PaymentType": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "example": 30
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "example": 220
          },
          "sindicate": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "hasControlledEfficiency": {
            "type": "boolean",
            "example": true
          },
          "voucherLimit": {
            "type": "number",
            "format": "double",
            "example": 1000
          },
          "situation": {
            "type": "integer",
            "format": "int32",
            "example": 9
          },
          "gender": {
            "type": "string",
            "example": "M"
          },
          "birthday": {
            "type": "string",
            "format": "date-time",
            "example": "2013-01-01T00:00:00.000Z"
          },
          "placeOfBirth": {
            "type": "string",
            "example": "Campina Grande"
          },
          "nationality": {
            "type": "string",
            "example": "Brasileiro"
          },
          "affiliation": {
            "type": "string",
            "example": "ANA MARIA RODRIGUES SOUSA E MANOEL JOÃO DE SOUSA"
          },
          "spouse": {
            "type": "string",
            "example": "MONEGLESIA SOUSA SANTOS"
          },
          "education": {
            "type": "string",
            "example": "MEDIO COMPLETO"
          },
          "driversLicense": {
            "type": "string",
            "example": "0512357490B"
          },
          "FGTSAccount": {
            "type": "string",
            "example": " "
          },
          "FGTSCategory": {
            "type": "string",
            "example": "EMPREGADO "
          },
          "admission": {
            "type": "string",
            "format": "date-time",
            "example": "2012-06-01T00:00:00.000Z"
          },
          "allowance": {
            "type": "string",
            "example": " "
          },
          "resignation": {
            "type": "string",
            "format": "date-time",
            "example": "2013-01-01T00:00:00.000Z"
          },
          "resignationReason": {
            "type": "string",
            "example": "MOTIVOS PESSOAIS"
          },
          "currentVacationStart": {
            "type": "string",
            "format": "date-time",
            "example": "2013-01-01T00:00:00.000Z"
          },
          "currentVacationEnd": {
            "type": "string",
            "format": "date-time",
            "example": "2013-01-01T00:00:00.000Z"
          },
          "vacationStart": {
            "type": "string",
            "format": "date-time",
            "example": "2013-01-01T00:00:00.000Z"
          },
          "vacationEnd": {
            "type": "string",
            "format": "date-time",
            "example": "2013-01-01T00:00:00.000Z"
          },
          "nextVacationStart": {
            "type": "string",
            "format": "date-time",
            "example": "2013-01-01T00:00:00.000Z"
          },
          "nextVacationEnd": {
            "type": "string",
            "format": "date-time",
            "example": "2013-01-01T00:00:00.000Z"
          },
          "address": {
            "type": "string",
            "example": "AVENIDA SANTOS DUMONT"
          },
          "CEP": {
            "type": "string",
            "example": "60150162"
          },
          "phone": {
            "type": "string",
            "example": "30302020"
          },
          "registerDate": {
            "type": "string",
            "format": "date-time",
            "example": "2013-01-01T00:00:00.000Z"
          },
          "role": {
            "type": "integer",
            "format": "int16",
            "example": 0
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "employeeArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/employee"
        }
      },
      "responseEmployee": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "FUNCIONÁRIOS DIVERSOS 2"
          },
          "CPF": {
            "type": "string",
            "example": 111111111112
          },
          "address": {
            "type": "string",
            "example": ""
          },
          "postalCode": {
            "type": "string",
            "example": 60000000
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "cityId": {
            "type": "integer",
            "format": "int",
            "example": 674
          },
          "UF": {
            "type": "string",
            "example": "CE"
          },
          "phone": {
            "type": "string",
            "example": ""
          },
          "cellphone": {
            "type": "string"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "commissionInCash": {
            "type": "number",
            "example": 0
          },
          "commissionInInstallments": {
            "type": "number",
            "example": 0
          },
          "commission1": {
            "type": "number",
            "example": 0
          },
          "commission2": {
            "type": "number",
            "example": 0
          },
          "commission3": {
            "type": "number",
            "example": 0
          },
          "commission4": {
            "type": "number",
            "example": 0
          },
          "commission5": {
            "type": "number",
            "example": 0
          },
          "commission6": {
            "type": "number",
            "example": 0
          },
          "commission7": {
            "type": "number",
            "example": 0
          },
          "commission8": {
            "type": "number",
            "example": 0
          },
          "commission9": {
            "type": "number",
            "example": 0
          },
          "commission09": {
            "type": "number",
            "example": 0
          },
          "commission10": {
            "type": "number",
            "example": 0
          },
          "commission11": {
            "type": "number",
            "example": 0
          },
          "commission12": {
            "type": "number",
            "example": 0
          },
          "commission13": {
            "type": "number",
            "example": 0
          },
          "commission14": {
            "type": "number",
            "example": 0
          },
          "commission15": {
            "type": "number",
            "example": 0
          },
          "commissionCashier": {
            "type": "number",
            "example": 0
          },
          "commissionManager": {
            "type": "number",
            "example": 0
          },
          "commissionSupervisor": {
            "type": "number",
            "example": 0
          },
          "commissionGeneral": {
            "type": "number",
            "example": 0
          },
          "limit": {
            "type": "number",
            "example": 0
          },
          "roleId": {
            "type": "number",
            "example": 0
          },
          "maritalStatusId": {
            "type": "number",
            "example": 0
          },
          "dependentQuantity": {
            "type": "number",
            "example": 0
          },
          "sectorId": {
            "type": "number",
            "example": 0
          },
          "salary": {
            "type": "number",
            "example": 0
          },
          "salaryCTPS": {
            "type": "number",
            "example": 0
          },
          "PaymentType": {
            "type": "number",
            "example": 0
          },
          "days": {
            "type": "number",
            "example": 0
          },
          "hours": {
            "type": "number",
            "example": 220
          },
          "syndicate": {
            "type": "boolean",
            "example": false
          },
          "transportationVoucher": {
            "type": "boolean",
            "example": false
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "hasControlledEfficiency": {
            "type": "boolean",
            "example": false
          },
          "productionGroupId": {
            "type": "integer",
            "format": "int",
            "example": 0
          },
          "biweeklyAdvanceAmount": {
            "type": "number",
            "example": 0
          },
          "isVacationEmployee": {
            "type": "boolean",
            "example": false
          },
          "goldQuotaNumberOfParts": {
            "type": "integer",
            "format": "int",
            "example": 250
          },
          "goldQuotaCommission": {
            "type": "boolean",
            "example": false
          },
          "goldQuotaAmount": {
            "type": "number",
            "example": 0
          },
          "silverQuotaNumberOfParts": {
            "type": "integer",
            "format": "int",
            "example": 500
          },
          "silverQuotaCommission": {
            "type": "boolean",
            "example": false
          },
          "silverQuotaAmount": {
            "type": "number",
            "example": 0
          },
          "bronzeQuotaNumberOfParts": {
            "type": "number",
            "example": 1000
          },
          "bronzeQuotaCommission": {
            "type": "boolean",
            "example": false
          },
          "bronzeQuotaAmount": {
            "type": "number",
            "example": 0
          },
          "voucherLimit": {
            "type": "number",
            "example": 0
          },
          "situation": {
            "type": "integer",
            "format": "int",
            "example": 1
          },
          "hasTriennium": {
            "type": "integer",
            "format": "int",
            "example": 0
          },
          "hasQuennium": {
            "type": "integer",
            "format": "int",
            "example": 0
          },
          "award": {
            "type": "number",
            "example": 0
          },
          "productivity": {
            "type": "number",
            "example": 0
          },
          "punctuality": {
            "type": "number",
            "example": 0
          },
          "bank": {
            "type": "integer",
            "format": "int",
            "example": 0
          },
          "agency": {
            "type": "string",
            "example": "0000"
          },
          "account": {
            "type": "string",
            "example": "0000"
          },
          "operation": {
            "type": "string",
            "example": "0000"
          },
          "launchProduction": {
            "type": "boolean",
            "example": false
          },
          "password": {
            "type": "string",
            "example": "SuperSenhaSeguraDaAlpha"
          },
          "playerIdPdvMobile": {
            "type": "string",
            "example": "StringDoPlayerIdPdvMobile"
          },
          "id": {
            "type": "integer",
            "format": "int",
            "example": 110
          }
        }
      },
      "inventoryOut": {
        "type": "object",
        "required": ["productId", "quantity"],
        "properties": {
          "productId": {
            "type": "string",
            "example": "2020030"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          }
        }
      },
      "bodyInventoryOutGrid": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "2020030"
          },
          "colorId": {
            "type": "string",
            "example": "4"
          },
          "size01": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size02": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size03": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size04": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size05": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size06": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size07": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size08": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size09": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size10": {
            "type": "integer",
            "format": "int16",
            "example": 1
          }
        }
      },
      "bodyInvoice": {
        "type": "object",
        "properties": {
          "consumerId": {
            "type": "integer",
            "example": 3
          },
          "sellerId": {
            "type": "integer",
            "example": 102
          },
          "billId": {
            "type": "string",
            "example": "22002079"
          },
          "grossValue": {
            "type": "integer",
            "format": "int32",
            "example": 180
          },
          "paymentId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "type": {
            "type": "string",
            "example": "01"
          },
          "installmentNumber": {
            "type": "integer",
            "example": "1",
            "description": "Número do parcelamento, começa em 1"
          }
        }
      },
      "responseInvoice": {
        "type": "object",
        "properties": {
          "consumerId": {
            "type": "integer",
            "format": "int16",
            "example": 3
          },
          "sellerId": {
            "type": "integer",
            "format": "int16",
            "example": 102
          },
          "grossValue": {
            "type": "integer",
            "format": "int16",
            "example": 180
          },
          "id": {
            "type": "string",
            "example": "0012200207901"
          },
          "type": {
            "type": "string",
            "example": "01"
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          }
        }
      },
      "paymentCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "4"
          },
          "name": {
            "type": "string",
            "example": "30/60/90/120"
          },
          "installments": {
            "type": "integer",
            "example": "3"
          },
          "firstInstallmentDays": {
            "type": "integer",
            "example": "30"
          },
          "days": {
            "type": "integer",
            "example": "30"
          },
          "catalog": {
            "type": "boolean",
            "example": false
          },
          "disabled": {
            "type": "boolean",
            "example": false
          },
          "discount": {
            "type": "number",
            "example": 3.99
          },
          "keepFixedDay": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "responsePaymentConditionArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/paymentCondition"
        }
      },
      "paymentMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "4"
          },
          "name": {
            "type": "string",
            "example": "CARTÃO"
          },
          "mnemonic": {
            "type": "string",
            "example": "CA"
          },
          "finisherId": {
            "type": "integer",
            "example": 99
          },
          "issue": {
            "type": "boolean",
            "example": false
          },
          "catalog": {
            "type": "boolean",
            "example": true
          },
          "description": {
            "type": "string",
            "example": "CARTÃO"
          }
        }
      },
      "paymentMethodArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/paymentMethod"
        }
      },
      "publication": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL da publicação",
            "example": "https://reqres.in/api/user"
          },
          "endpoint": {
            "type": "string",
            "description": "Endpoint da publicação",
            "example": "api/alguma"
          },
          "contents": {
            "type": "object",
            "description": "Conteúdo da publicação",
            "properties": {
              "teste": {
                "type": "string",
                "example": "teste"
              }
            }
          }
        }
      },
      "subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object",
            "example": "61a4c40aa79376c00c8c010d"
          },
          "callback": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL que receberá notificações de eventos a rota a qual se inscreveu",
                "example": "https://test-api.app/api/subscription/publish"
              },
              "method": {
                "type": "string",
                "description": "Método HTTP que será utilizado para receber as notificações",
                "example": "POST"
              },
              "config": {
                "type": "array",
                "description": "Configurações adicionais para o envio da notificação, como headers, query params, etc. Esse campo tem o mesmo formato do Request Config do Axios: https://axios-http.com/docs/req_config",
                "items": {
                  "$ref": "#/components/schemas/config"
                }
              }
            }
          },
          "route": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "URL da API a qual deseja se inscrever",
                "example": "https://alpha-api.com/"
              },
              "endpoint": {
                "type": "string",
                "description": "Endpoint da API a qual deseja se inscrever",
                "example": "product/inventory"
              },
              "method": {
                "type": "array",
                "description": "Métodos HTTP que deseja se inscrever",
                "example": ["POST", "PUT", "DELETE"]
              }
            }
          }
        }
      },
      "bodySale": {
        "type": "object",
        "properties": {
          "consumerId": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "consumer": {
            "type": "string",
            "example": "Cliente 5"
          },
          "sellerId": {
            "type": "integer",
            "format": "int32",
            "example": 102
          },
          "discountValue": {
            "type": "number",
            "format": "double",
            "example": 0.0
          },
          "deliveryFee": {
            "type": "number",
            "format": "double",
            "example": 20.0
          },
          "paymentId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "ecommerceOrderId": {
            "type": "string",
            "example": "2000834322"
          },
          "inCash": {
            "type": "number",
            "format": "double",
            "example": 0
          },
          "installments": {
            "type": "number",
            "format": "double",
            "example": 800
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "priceTable": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productSale"
            }
          }
        }
      },
      "deleteSale": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "example": "003242134034"
          },
          "billId": {
            "type": "integer",
            "format": "int32",
            "example": 4102
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productSale"
            }
          }
        }
      },
      "responseSale": {
        "type": "object",
        "properties": {
          "bill": {
            "$ref": "#/components/schemas/billPost"
          },
          "inventoryOut": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventoryOut"
            }
          },
          "dpa": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dpaBlockResponse"
            }
          },
          "inventoryOutGrid": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/grid"
            }
          },
          "invoice": {
            "type": "object",
            "properties": {
              "consumerId": {
                "type": "integer",
                "format": "int32",
                "example": 2
              },
              "sellerId": {
                "type": "integer",
                "format": "int32",
                "example": 102
              },
              "Id": {
                "type": "string",
                "example": "0010020013501"
              },
              "grossValue": {
                "type": "integer",
                "format": "int32",
                "example": 264
              },
              "type": {
                "type": "string",
                "example": "01"
              }
            }
          }
        }
      },
      "productSale": {
        "type": "object",
        "required": ["productId", "grids"],
        "properties": {
          "productId": {
            "type": "string",
            "example": "439104"
          },
          "unitValue": {
            "type": "number",
            "format": "double",
            "example": 36.0
          },
          "grids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/grid"
            }
          },
          "quantity": {
            "type": "integer",
            "format": "inte32",
            "example": 4
          },
          "totalValue": {
            "type": "number",
            "format": "double",
            "example": 144.0
          }
        }
      },
      "bodySignIn": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "LOCAL"
          },
          "identification": {
            "type": "string",
            "example": "userteste3@gmail.com"
          },
          "key": {
            "type": "string",
            "example": "1234"
          }
        }
      },
      "responseSignIn": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJmYW1pbHlOYW1lIjoiT25lIiwiZ2l2ZW5OYW1lIjoiU29tZSIsImlkIjoiNjE1MWI0MjljYzkzN2Q2N2EwMTdiZDk0IiwicGVybWlzc2lvbnMiOnsiYWxsIjp7ImFsbCI6WyJhbGwiXX0sImF1dGgiOnsiYWxsIjpbImFsbCJdfX0sImlkZW50aWZpY2F0aW9uIjpbeyJ0eXBlIjoiTE9DQUwiLCJpZGVudGlmaWNhdGlvbiI6InVzZXJ0ZXN0ZTNAZ21haWwuY29tIiwidW52ZXJpZmllZCI6dHJ1ZX1dLCJpYXQiOjE2MzMwMTAxNDcsImV4cCI6MTYzMzAxMTA0N30.szdADaYhCiwkjSX_fCFZYXKWev8TCMLFw8z1LQxkQ7lVZGsF5JJ2yD0nQDxh_-hoDDC1VqCbW-0X6ZvMIKBePt5mnkYFEwLiDxf80r3B22qw_cTVaeDfPQjdyxRymMgPfgFdH1TFsfNKCIUZZ-IbT7HTyJXU6YJF-4K6P9D9G6nGqMwGDuBqv2auvo2mKlwWW9J7We40j9d1CgRn4u1_lOSj2l4BN8_DY0hI2dQeBP4ccdRltWIH9sv9EkdZPjuF0KisLqbQ24RBXwQ_7tXyWXTCnODaeWC4Ue1tFKsZbyJ9pOUKCwJxOXaiT-tdCqegbfkRh0la1dfstVJuAcLv2g"
          }
        }
      },
      "bodySignUp": {
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string",
            "example": "Some"
          },
          "familyName": {
            "type": "string",
            "example": "One"
          },
          "identifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/identifications"
            }
          },
          "permissions": {
            "type": "object",
            "properties": {
              "auth": {
                "type": "object",
                "properties": {
                  "all": {
                    "$ref": "#/components/schemas/allArray"
                  }
                }
              },
              "VUTT": {
                "type": "object",
                "properties": {
                  "all": {
                    "$ref": "#/components/schemas/allArray"
                  }
                }
              }
            }
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/all"
            }
          }
        }
      },
      "responseSignUp": {
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string",
            "example": "Some"
          },
          "familyName": {
            "type": "string",
            "example": "One"
          },
          "id": {
            "type": "string",
            "example": "6151b429cc937d67a017bd94"
          },
          "identifications": {
            "$ref": "#/components/schemas/identificationsArray"
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/instances"
            }
          },
          "permissions": {
            "type": "object",
            "properties": {
              "all": {
                "type": "object",
                "properties": {
                  "all": {
                    "$ref": "#/components/schemas/allArray"
                  }
                }
              },
              "auth": {
                "type": "object",
                "properties": {
                  "all": {
                    "$ref": "#/components/schemas/allArray"
                  }
                }
              }
            }
          }
        }
      },
      "theme": {
        "type": "object",
        "required": ["id", "priceTable", "minimunQuantity"],
        "properties": {
          "id": {
            "type": "string",
            "example": "1213152"
          },
          "logos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/imagesGroupArray"
            }
          },
          "favicos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/imagesGroupArray"
            }
          }
        }
      },
      "themeArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/theme"
        }
      },
      "catalogsProduct": {
        "type": "string",
        "example": "Calças"
      },
      "category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "JEANS"
          }
        }
      },
      "categoryArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/category"
        }
      },
      "city": {
        "type": "object",
        "required": ["name", "state"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 21
          },
          "name": {
            "type": "string",
            "example": "AGUA BRANCA"
          },
          "state": {
            "type": "string",
            "example": "AL"
          },
          "IBGEId": {
            "type": "integer",
            "format": "int32",
            "example": 2700201
          }
        }
      },
      "cityArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/city"
        }
      },
      "client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "CONSUMIDORES DIVERSOS"
          },
          "corporateName": {
            "type": "string",
            "example": "CONSUMIDORES DIVERSOS"
          },
          "CNPJCPF": {
            "type": "string",
            "example": "11111111111"
          },
          "address": {
            "type": "string",
            "example": "AVENIDA SANTOS DUMONT"
          },
          "postalCode": {
            "type": "string",
            "example": "60150162"
          },
          "district": {
            "type": "string",
            "example": "ALDEOTA"
          },
          "city": {
            "type": "string",
            "example": "FORTALEZA"
          },
          "UF": {
            "type": "string",
            "example": "CE"
          },
          "country": {
            "type": "string",
            "example": "BRASIL"
          },
          "registerDate": {
            "type": "string",
            "format": "date-time",
            "example": "2013-01-01T00:00:00.000Z"
          },
          "phone": {
            "type": "string",
            "example": "30302020"
          },
          "cellphone": {
            "type": "string",
            "example": "085999808080"
          },
          "whatsapp": {
            "type": "string",
            "example": "085999808080"
          },
          "email": {
            "type": "string",
            "example": "cliente@email.com.br"
          },
          "blocked": {
            "type": "boolean",
            "example": false
          },
          "inactive": {
            "type": "boolean",
            "example": false
          },
          "clientType": {
            "type": "integer",
            "format": "int16",
            "example": 0
          }
        }
      },
      "clientArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/client"
        }
      },
      "responseClient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "CONSUMIDORES DIVERSOS"
          },
          "corporateName": {
            "type": "string",
            "example": "CONSUMIDORES DIVERSOS"
          },
          "CNPJCPF": {
            "type": "string",
            "example": "11111111111"
          },
          "address": {
            "type": "string",
            "example": "AVENIDA SANTOS DUMONT"
          },
          "postalCode": {
            "type": "string",
            "example": "60150162"
          },
          "district": {
            "type": "string",
            "example": "ALDEOTA"
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "example": 674
          },
          "UF": {
            "type": "string",
            "example": "CE"
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "example": 674
          },
          "phone": {
            "type": "string",
            "example": "30302020"
          },
          "cellphone": {
            "type": "string",
            "example": "085999808080"
          },
          "whatsapp": {
            "type": "string",
            "example": "085999808080"
          },
          "email": {
            "type": "string",
            "example": "cliente@email.com.br"
          },
          "blocked": {
            "type": "boolean",
            "example": false
          },
          "inactive": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "collection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "BEACH WERE FLUID"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-24 19:35:20"
          },
          "expirationAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-24 19:35:20"
          }
        }
      },
      "collectionArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/collection"
        }
      },
      "color": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "AZUL"
          },
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/size"
            }
          }
        }
      },
      "colorArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/color"
        }
      },
      "config": {
        "type": "object",
        "properties": {
          "test": {
            "type": "string",
            "example": "1234"
          }
        }
      },
      "configResponse": {
        "type": "object",
        "properties": {
          "test": {
            "type": "string",
            "example": "1234"
          },
          "id": {
            "type": "string",
            "example": "61a4c40aa79376c00c8c010f"
          }
        }
      },
      "dpaBlockResponse": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "439104"
          },
          "unitValue": {
            "type": "number",
            "format": "double",
            "example": 36.0
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "billId": {
            "type": "string",
            "example": "200135"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2021-09-24 19:35:20"
          },
          "type": {
            "type": "string",
            "example": "S"
          },
          "history": {
            "type": "string",
            "example": "VENDA REALIZADA PELO SITE"
          }
        }
      },
      "grid": {
        "type": "object",
        "properties": {
          "colorId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "size01": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size02": {
            "type": "integer",
            "format": "int16",
            "example": 0
          },
          "size03": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size04": {
            "type": "integer",
            "format": "int16",
            "example": 0
          },
          "size05": {
            "type": "integer",
            "format": "int16",
            "example": 0
          },
          "size06": {
            "type": "integer",
            "format": "int16",
            "example": 0
          },
          "size07": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "size08": {
            "type": "integer",
            "format": "int16",
            "example": 0
          },
          "size09": {
            "type": "integer",
            "format": "int16",
            "example": 0
          },
          "size10": {
            "type": "integer",
            "format": "int16",
            "example": 0
          },
          "productId": {
            "type": "string",
            "example": "439104"
          }
        }
      },
      "group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "BLUSAS"
          },
          "unit": {
            "type": "string",
            "example": ""
          }
        }
      },
      "groupArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/group"
        }
      },
      "catalogGroup": {
        "type": "object",
        "required": ["id", "priceTable", "minimunQuantity"],
        "properties": {
          "id": {
            "type": "string",
            "example": "61cc902656f304037ce2b5e0"
          },
          "name": {
            "type": "string",
            "example": "Camisas"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/imagesGroupArray"
            }
          },
          "disabled": {
            "type": "boolean",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T03:00:00.000Z"
          },
          "expirationAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-11-01T03:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T03:00:00.000Z"
          },
          "priceTable": {
            "type": "number",
            "format": "int32",
            "example": 8
          }
        }
      },
      "groupCatalogArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/catalogGroup"
        }
      },
      "identifications": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "LOCAL"
          },
          "identification": {
            "type": "string",
            "example": "userteste3@gmail.com"
          },
          "key": {
            "type": "string",
            "example": "1234"
          }
        }
      },
      "identificationsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/identificationsResponse"
        }
      },
      "identificationsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6151b429cc937d67a017bd95"
          },
          "type": {
            "type": "string",
            "example": "LOCAL"
          },
          "identification": {
            "type": "string",
            "example": "userteste3@gmail.com"
          },
          "unverified": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "imagesGroupArray": {
        "type": "string",
        "example": "https://img.elo7.com.br/product/main/3A98FBA/roupa-free-fire-angelical-free-fire-angelical.jpg"
      },
      "instances": {
        "type": "string",
        "example": ""
      },
      "inventory": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "example": "2020029-0004-2"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "inventoryArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/inventory"
        }
      },
      "key": {
        "type": "string",
        "example": "read"
      },
      "line": {
        "type": "object",
        "properties": {
          "CNPJ": {
            "type": "string",
            "example": "03502989000120"
          },
          "id": {
            "type": "integer",
            "format": "int16",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "MARCA PRINCIPAL"
          }
        }
      },
      "lineArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/line"
        }
      },
      "product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "0000001"
          },
          "name": {
            "type": "string",
            "example": "BLUSA GOLA POLO -  BORDADO"
          },
          "details": {
            "type": "string",
            "example": "BLUSA LEGAL"
          },
          "weight": {
            "type": "number",
            "format": "float",
            "example": 2.54
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 84.32
          },
          "costPrice": {
            "type": "number",
            "format": "double",
            "example": 82.32
          },
          "buyPrice": {
            "type": "number",
            "format": "double",
            "example": 82.32
          },
          "unit": {
            "type": "string",
            "example": "PC"
          },
          "disabled": {
            "type": "boolean",
            "example": false
          },
          "gender": {
            "type": "integer",
            "format": "int16",
            "example": 3
          },

          "createAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T03:00:00.000Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2020-12-01T00:00:00.000Z"
          },
          "isWebStore": {
            "type": "boolean",
            "example": false
          },
          "grid": {
            "type": "string",
            "example": "G"
          },
          "barcode": {
            "type": "string",
            "example": "0001101"
          },
          "gridTable": {
            "type": "string",
            "example": "G, M, P"
          },
          "cloth1": {
            "type": "string",
            "example": "Couro"
          },
          "cloth2": {
            "type": "string",
            "example": "Tecido Crú"
          },
          "lastBalanceAt": {
            "type": "string",
            "format": "date-time",
            "example": "2020-12-01T00:00:00.000Z"
          },
          "lastPurchaseAt": {
            "type": "string",
            "format": "date-time",
            "example": "2020-12-01T00:00:00.000Z"
          },
          "in": {
            "type": "string",
            "example": "P"
          },
          "out": {
            "type": "string",
            "example": "P"
          },
          "supplier": {
            "type": "string",
            "example": "José Édson de Queiroz"
          },
          "initialId": {
            "type": "string",
            "example": "0012012"
          },
          "lastSupplierPurchase": {
            "type": "string",
            "format": "date-time",
            "example": "2020-12-01T00:00:00.000Z"
          },
          "employeePrice": {
            "type": "number",
            "example": 20.99
          },
          "NCM": {
            "type": "integer",
            "example": 3432240
          },
          "maximumStock": {
            "type": "integer",
            "example": 2000
          },
          "minimumStock": {
            "type": "integer",
            "example": 20
          },
          "ICP": {
            "type": "integer",
            "example": 2072623
          },
          "mixId": {
            "type": "integer",
            "example": 4637428
          },
          "CEST": {
            "type": "integer",
            "example": 3432240
          },
          "webUpdate": {
            "type": "boolean",
            "example": false
          },
          "categoryId": {
            "type": "integer",
            "example": 4637428
          },
          "categoryName": {
            "type": "string",
            "example": "P"
          },
          "groupId": {
            "type": "integer",
            "example": 4637428
          },
          "groupName": {
            "type": "string",
            "example": "P"
          },
          "collectionId": {
            "type": "integer",
            "example": 4637428
          },
          "collectionName": {
            "type": "string",
            "example": "P"
          },
          "lineId": {
            "type": "integer",
            "example": 4637428
          },
          "lineName": {
            "type": "string",
            "example": "P"
          },
          "colorId": {
            "type": "integer",
            "example": 4637428
          },
          "colorName": {
            "type": "string",
            "example": "P"
          },
          "sizeId": {
            "type": "integer",
            "example": 4637428
          },
          "sizeName": {
            "type": "string",
            "example": "P"
          },
          "quantity": {
            "type": "integer",
            "example": 46
          },
          "storeId": {
            "$ref": "#/components/schemas/storeId"
          },
          "elementNumber": {
            "type": "integer",
            "example": 4637
          },
          "sku": {
            "type": "string",
            "example": "1284783-21848740-2321"
          },
          "skuQuantity": {
            "type": "integer",
            "example": 467
          },
          "size": {
            "type": "string",
            "example": "P"
          },
          "category": {
            "$ref": "#/components/schemas/category"
          },
          "group": {
            "$ref": "#/components/schemas/group"
          },
          "collection": {
            "$ref": "#/components/schemas/collection"
          },
          "line": {
            "$ref": "#/components/schemas/line"
          },
          "colors": {
            "$ref": "#/components/schemas/colorArray"
          }
        }
      },
      "productArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/product"
        }
      },
      "productGrid": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 3
          },
          "name": {
            "type": "string",
            "example": "CORES DIVERSAS"
          },
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sizes"
            }
          }
        }
      },
      "settings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2345,
            "description": "Id do registro"
          },
          "maximumDiscount": {
            "type": "number",
            "format": "double",
            "example": 100.0,
            "description": "Valor máximo de desconto"
          },
          "minimumQuantityWholesale": {
            "type": "integer",
            "example": 10,
            "description": "Quantidade mínima para venda de atacado"
          },
          "minimumValueWholesale": {
            "type": "number",
            "format": "double",
            "example": 100.0,
            "description": "Valor mínimo para venda de atacado"
          }
        }
      },
      "settingsArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/settings"
        }
      },
      "onSale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "61cc906a56f304037ce2b61a",
            "description": "Id da promoção."
          },
          "name": {
            "type": "string",
            "description": "Nome da promoção.",
            "example": "Promoção 1"
          },
          "productId": {
            "type": "integer",
            "example": 1056345,
            "description": "Referencia do Produto."
          },
          "groupInPercentage": {
            "type": "number",
            "example": 10.0,
            "description": "Grupo de Desconto em Porcentagem."
          },
          "productInPercentage": {
            "type": "number",
            "example": 12.4,
            "description": "Produto em Porcentagem."
          },
          "groupInValue": {
            "type": "number",
            "example": 12.4,
            "description": "Grupo de Desconto em Valor."
          },
          "storeId": {
            "type": "integer",
            "example": 1056345,
            "description": "Id da loja."
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-01T00:00:00.000Z",
            "description": "Data de inicio da promoção."
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "example": "2020-02-01T00:00:00.000Z",
            "description": "Data de fim da promoção."
          },
          "disabled": {
            "type": "boolean",
            "example": false,
            "description": "Status da promoção."
          },
          "priceTable": {
            "type": "integer",
            "example": 1,
            "description": "Tabela de preço."
          }
        }
      },
      "onSaleArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/onSale"
        }
      },
      "error400": {
        "description": "Requisição invalida.",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Erro 400"
          }
        }
      },
      "error500": {
        "description": "Erro interno do servidor.",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Erro 500"
          }
        }
      },
      "error503": {
        "description": "Servidor Inicializando Tente Novamente Mais Tarde.",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Erro 503"
          }
        }
      }
    }
  }
}
